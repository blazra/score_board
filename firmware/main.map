Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
/usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o (exit)
/usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

state               0x1               main.o
id                  0x1               main.o
leds                0x4               main.o
cursor              0x1               main.o
idum                0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/libc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/libattiny13a.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3b0
 *(.vectors)
 .vectors       0x0000000000000000       0x14 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000014                . = ALIGN (0x2)
                0x0000000000000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000014        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000014                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000014                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000014                __ctors_start = .
 *(.ctors)
                0x0000000000000014                __ctors_end = .
                0x0000000000000014                __dtors_start = .
 *(.dtors)
                0x0000000000000014                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000014        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
                0x0000000000000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000014        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000001c       0x10 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000001c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000002c        0x4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
 *(.init9)
 *(.text)
 .text          0x0000000000000030        0x2 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
                0x0000000000000030                __vector_1
                0x0000000000000030                __bad_interrupt
                0x0000000000000030                __vector_6
                0x0000000000000030                __vector_3
                0x0000000000000030                __vector_7
                0x0000000000000030                __vector_5
                0x0000000000000030                __vector_4
                0x0000000000000030                __vector_9
                0x0000000000000030                __vector_2
                0x0000000000000030                __vector_8
 .text          0x0000000000000032      0x1d4 main.o
                0x0000000000000032                delay
                0x0000000000000046                WDT_off
                0x000000000000005c                EEPROM_write
                0x000000000000006c                EEPROM_read
                0x0000000000000078                EEPROM_write_32b
                0x00000000000000be                EEPROM_read_32b
                0x0000000000000128                spi_write_byte
                0x000000000000015e                leds_update
                0x0000000000000188                leds_blink
                0x00000000000001d2                rand
 .text          0x0000000000000206        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text          0x0000000000000206        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000206        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000206                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000206      0x174 main.o
                0x0000000000000206                main
 .text.libgcc.mul
                0x000000000000037a       0x32 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
                0x000000000000037a                __mulsi3
                0x000000000000037e                __mulsi3_helper
 .text.libgcc.div
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc   0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc.prologue
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc.builtins
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc.fmul
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc.fixed
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .text.libgcc.mul
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x00000000000003ac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003ac        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000000000003ac                exit
                0x00000000000003ac                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003ac        0x4 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000003b0                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000003b0                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000003b0
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800060        0xb
                0x0000000000800060                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o
 .bss           0x0000000000800060        0x0 main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800060        0xb main.o
                0x0000000000800060                state
                0x0000000000800061                id
                0x0000000000800062                leds
                0x0000000000800066                cursor
                0x0000000000800067                idum
                0x000000000080006b                PROVIDE (__bss_end = .)
                0x00000000000003b0                __data_load_start = LOADADDR (.data)
                0x00000000000003b0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006b        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080006b                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xe94
 *(.stab)
 .stab          0x0000000000000000      0xe94 main.o

.stabstr        0x0000000000000000      0xe15
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe15 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x2dc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x2dc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o

.debug_abbrev   0x0000000000000000      0x2b6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x2b6 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x100
 *(.debug_str)
 .debug_str     0x0000000000000000      0x100 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr25/tiny-stack/crtattiny13a.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
